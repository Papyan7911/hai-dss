// src/components/AnalysisWorkspace/AnalysisWorkspace.js
// ’Ä’´’¥’∂’°’Ø’°’∂ ’æ’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’ø’°÷Ä’°’Æ÷Ñ - ’ø’°’¢’•÷Ä’∏’æ ’´’∂’ø’•÷Ä÷Ü’•’µ’Ω

import React from 'react';
import { useData } from '../../context/DataContext';
import TabNavigation from './TabNavigation';
import AnalysisTab from './TabContents/AnalysisTab';
import SyntheticTab from './TabContents/SyntheticTab';
import FuzzyTab from './TabContents/FuzzyTab';
import ClusteringTab from './TabContents/ClusteringTab';
import ScenariosTab from './TabContents/ScenariosTab';
import ResultsTab from './TabContents/ResultsTab';

/**
 * AnalysisWorkspace ’¢’°’≤’°’§÷Ä’´’π - ’æ’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’°’∑’≠’°’ø’°’ø’°÷Ä’°’Æ÷Ñ
 * ’ë’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ ’ß ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’¢’∏’¨’∏÷Ä ÷É’∏÷Ç’¨’•÷Ä’® ’ø’°’¢’•÷Ä’´ ’¥’´’ª’∏÷Å’∏’æ
 */
const AnalysisWorkspace = () => {
    const {
        analysisWorkspace,
        activeTab,
        setActiveTab
    } = useData();

    // ‘µ’©’• ’æ’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’ø’°÷Ä’°’Æ÷Ñ’® ÷Å’∏÷Ç÷Å’°’§÷Ä’æ’°’Æ ’π’ß, ’∏’π’´’∂’π ’π’æ’•÷Ä’°’§’°÷Ä’±’∂’•’¨
    if (!analysisWorkspace) {
        return null;
    }

    /**
     * ’è’°’¢’´ ’∫’°’µ’¥’°’∂’°’Ø’°’∂ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥
     * @param {string} tabName - ’è’°’¢’´ ’°’∂’æ’°’∂’∏÷Ç’¥
     * @returns {JSX.Element|null} ’è’°’¢’´ ’¢’∏’æ’°’∂’§’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂
     */
    const renderTabContent = (tabName) => {
        switch (tabName) {
            case 'analysis':
                return <AnalysisTab />;
            case 'synthetic':
                return <SyntheticTab />;
            case 'fuzzy':
                return <FuzzyTab />;
            case 'clustering':
                return <ClusteringTab />;
            case 'scenarios':
                return <ScenariosTab />;
            case 'results':
                return <ResultsTab />;
            default:
                return <AnalysisTab />;
        }
    };

    /**
     * ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’°’º’°’ª’®’∂’©’°÷Å’´ ’∞’°’∑’æ’°÷Ä’Ø
     * @returns {number} ‘±’º’°’ª’®’∂’©’°÷Å’´ ’ø’∏’Ø’∏’Ω
     */
    const getOverallProgress = () => {
        // ’ç’° ’Ø’°’≠’æ’°’Æ ’ß ’°’Ø’ø’´’æ ’ø’°’¢’´÷Å ÷á ’°’¥’¢’∏’≤’ª’°’Ø’°’∂ ’£’∏÷Ä’Æ’®’∂’©’°÷Å’´÷Å
        const tabProgress = {
            'analysis': 20,
            'synthetic': 40,
            'fuzzy': 60,
            'clustering': 80,
            'scenarios': 90,
            'results': 100
        };

        return tabProgress[activeTab] || 0;
    };

    return (
        <div className="bg-white/95 backdrop-blur-sm rounded-2xl p-6 shadow-xl mt-8">
            {/* ’é’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’ø’°÷Ä’°’Æ÷Ñ’´ ’æ’•÷Ä’∂’°’£’´÷Ä */}
            <div className="mb-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                    üî¨ ’é’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’°’∑’≠’°’ø’°’∂÷Ñ
                </h2>
                <p className="text-gray-600">
                    ‘ª’∂’ø’•÷Ä’°’Ø’ø’´’æ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’∞’°÷Ä’©’°’Ø ’¢’∏’¨’∏÷Ä ’¥’•’©’∏’§’°’¢’°’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’´÷Ñ’∂’•÷Ä’∏’æ
                </p>
            </div>

            {/* ’è’°’¢’•÷Ä’´ ’∂’°’æ’´’£’°÷Å’´’° */}
            <TabNavigation
                activeTab={activeTab}
                onTabChange={setActiveTab}
            />

            {/* ’è’°’¢’´ ’¢’∏’æ’°’∂’§’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂ */}
            <div className="mt-6">
                <div className="tab-content-container">
                    {renderTabContent(activeTab)}
                </div>
            </div>

            {/* ’é’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’£’∏÷Ä’Æ’®’∂’©’°÷Å’´ ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg border-l-4 border-blue-500">
                <div className="flex items-center justify-between">
                    <div>
                        <h4 className="font-bold text-gray-700">üìä ’é’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’£’∏÷Ä’Æ’®’∂’©’°÷Å’´ ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø</h4>
                        <p className="text-sm text-gray-600 mt-1">
                            ‘∏’∂’©’°÷Å’´’Ø ÷É’∏÷Ç’¨: {getTabLabel(activeTab)}
                        </p>
                    </div>

                    {/* ‘±’º’°’ª’®’∂’©’°÷Å’´ ’´’∂’§’´’Ø’°’ø’∏÷Ä */}
                    <div className="flex items-center space-x-2">
                        <div className="text-sm font-medium text-gray-700">
                            ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’°’º’°’ª’®’∂’©’°÷Å:
                        </div>
                        <div className="w-24 bg-gray-200 rounded-full h-2">
                            <div
                                className="bg-gradient-to-r from-blue-400 to-purple-600 h-2 rounded-full transition-all duration-500"
                                style={{ width: `${getOverallProgress()}%` }}
                            ></div>
                        </div>
                        <div className="text-sm font-bold text-gray-700">
                            {getOverallProgress()}%
                        </div>
                    </div>
                </div>
            </div>

            {/* ’î’°’æ’´ ’Æ’°’∂’∏÷Ç÷Å’∏÷Ç’¥’∂’•÷Ä */}
            <AnalysisAlerts />
        </div>
    );
};

/**
 * ’è’°’¢’´ ’∫’´’ø’°’Ø’´ ’Ω’ø’°÷Å’∏÷Ç’¥
 * @param {string} tabName - ’è’°’¢’´ ’°’∂’æ’°’∂’∏÷Ç’¥
 * @returns {string} ’è’°’¢’´ ’∞’°’µ’•÷Ä’•’∂ ’∫’´’ø’°’Ø
 */
const getTabLabel = (tabName) => {
    const labels = {
        'analysis': '‘±’º’°’ª’∂’°’µ’´’∂ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂',
        'synthetic': '’ç’´’∂’©’•’ø’´’Ø ’ø’æ’µ’°’¨’∂’•÷Ä',
        'fuzzy': '‘±’∂’∏÷Ä’∏’∑ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂',
        'clustering': '‘ø’¨’°’Ω’ø’•÷Ä’°÷Å’∏÷Ç’¥',
        'scenarios': '’ç÷Å’•’∂’°÷Ä’∂’•÷Ä',
        'results': '‘±÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä'
    };
    return labels[tabName] || tabName;
};

/**
 * ’é’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’Æ’°’∂’∏÷Ç÷Å’∏÷Ç’¥’∂’•÷Ä’´ ’¢’°’≤’°’§÷Ä’´’π
 */
const AnalysisAlerts = () => {
    const {
        currentData,
        syntheticData,
        fuzzyResults,
        clusterData,
        scenarios
    } = useData();

    const alerts = [];

    // ’è’æ’µ’°’¨’∂’•÷Ä’´ ’æ’´’≥’°’Ø’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
    if (!currentData || currentData.length === 0) {
        alerts.push({
            type: 'warning',
            message: '‘≤’∂÷Ö÷Ä’´’∂’°’Ø ’ø’æ’µ’°’¨’∂’•÷Ä’® ’¢’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’•’∂'
        });
    }

    // ’ç’´’∂’©’•’ø’´’Ø ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
    if (syntheticData && syntheticData.length > 0) {
        alerts.push({
            type: 'success',
            message: `‘≥’•’∂’•÷Ä’°÷Å’æ’•’¨ ’ß ${syntheticData.length} ’Ω’´’∂’©’•’ø’´’Ø ’ø’∏’≤`
        });
    }

    // ‘±’∂’∏÷Ä’∏’∑ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’°’∂ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
    if (fuzzyResults && fuzzyResults.low > 40) {
        alerts.push({
            type: 'warning',
            message: `’ë’°’Æ÷Ä ’æ’Ω’ø’°’∞’∏÷Ç’©’µ’°’∂ ’¥’°’Ø’°÷Ä’§’°’Ø: ${fuzzyResults.low}%`
        });
    }

    // ‘ø’¨’°’Ω’ø’•÷Ä’´’¶’°÷Å’´’°’µ’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
    if (clusterData && clusterData.length > 0) {
        alerts.push({
            type: 'info',
            message: `’Ä’°’µ’ø’∂’°’¢’•÷Ä’æ’•’¨ ’ß ${clusterData.length} ’ø’°÷Ä’¢’•÷Ä ’≠’∏÷Ç’¥’¢`
        });
    }

    // ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
    if (scenarios && scenarios.length > 0) {
        const highPriorityCount = scenarios.filter(s => s.priority === 'high').length;
        if (highPriorityCount > 0) {
            alerts.push({
                type: 'warning',
                message: `${highPriorityCount} ’¢’°÷Ä’±÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’°’∂ ’Ω÷Å’•’∂’°÷Ä`
            });
        }
    }

    if (alerts.length === 0) {
        return null;
    }

    return (
        <div className="mt-4 space-y-2">
            {alerts.map((alert, index) => (
                <div
                    key={index}
                    className={`flex items-center p-2 rounded-lg text-sm ${getAlertClasses(alert.type)}`}
                >
                    <span className="mr-2">{getAlertIcon(alert.type)}</span>
                    <span>{alert.message}</span>
                </div>
            ))}
        </div>
    );
};

/**
 * ‘æ’°’∂’∏÷Ç÷Å’¥’°’∂ CSS ’§’°’Ω’•÷Ä’´ ’Ω’ø’°÷Å’∏÷Ç’¥
 * @param {string} type - ‘æ’°’∂’∏÷Ç÷Å’¥’°’∂ ’ø’•’Ω’°’Ø
 * @returns {string} CSS ’§’°’Ω’•÷Ä
 */
const getAlertClasses = (type) => {
    switch (type) {
        case 'success':
            return 'bg-green-100 text-green-800 border border-green-200';
        case 'warning':
            return 'bg-yellow-100 text-yellow-800 border border-yellow-200';
        case 'info':
            return 'bg-blue-100 text-blue-800 border border-blue-200';
        case 'error':
            return 'bg-red-100 text-red-800 border border-red-200';
        default:
            return 'bg-gray-100 text-gray-800 border border-gray-200';
    }
};

/**
 * ‘æ’°’∂’∏÷Ç÷Å’¥’°’∂ ’∂’∑’°’∂’´ ’Ω’ø’°÷Å’∏÷Ç’¥
 * @param {string} type - ‘æ’°’∂’∏÷Ç÷Å’¥’°’∂ ’ø’•’Ω’°’Ø
 * @returns {string} Emoji ’∂’∑’°’∂
 */
const getAlertIcon = (type) => {
    switch (type) {
        case 'success':
            return '‚úÖ';
        case 'warning':
            return '‚ö†Ô∏è';
        case 'info':
            return '‚ÑπÔ∏è';
        case 'error':
            return '‚ùå';
        default:
            return 'üìã';
    }
};

export default AnalysisWorkspace;