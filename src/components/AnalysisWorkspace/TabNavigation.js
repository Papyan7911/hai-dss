// src/components/AnalysisWorkspace/TabNavigation.js
// ’è’°’¢’•÷Ä’´ ’∂’°’æ’´’£’°÷Å’´’°’µ’´ ’¢’°’≤’°’§÷Ä’´’π

import React from 'react';
import { useData } from '../../context/DataContext';

/**
 * TabNavigation ’¢’°’≤’°’§÷Ä’´’π - ’æ’•÷Ä’¨’∏÷Ç’Æ’°’Ø’°’∂ ’ø’°’¢’•÷Ä’´ ’∂’°’æ’´’£’°÷Å’´’°
 * @param {Object} props - ‘≤’°’≤’°’§÷Ä’´’π’´ ’∫÷Ä’∏’∫’Ω’•÷Ä
 * @param {string} props.activeTab - ‘±’Ø’ø’´’æ ’ø’°’¢
 * @param {Function} props.onTabChange - ’è’°’¢’´ ÷É’∏÷É’∏’≠’∏÷Ç’©’µ’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°
 */
const TabNavigation = ({ activeTab, onTabChange }) => {
    const {
        currentData,
        syntheticData,
        fuzzyResults,
        clusterData,
        scenarios
    } = useData();

    /**
     * ’è’°’¢’•÷Ä’´ ’Ø’∏’∂÷Ü’´’£’∏÷Ç÷Ä’°÷Å’´’°
     */
    const tabs = [
        {
            id: 'analysis',
            label: '‘±’º’°’ª’∂’°’µ’´’∂ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂',
            icon: 'üìà',
            description: '’è’æ’µ’°’¨’∂’•÷Ä’´ ’∏÷Ä’°’Ø’´ ’£’∂’°’∞’°’ø’∏÷Ç’¥',
            enabled: true,
            completed: currentData && currentData.length > 0
        },
        {
            id: 'synthetic',
            label: '’ç’´’∂’©’•’ø’´’Ø ’ø’æ’µ’°’¨’∂’•÷Ä',
            icon: 'üß¨',
            description: '‘±÷Ä’∞’•’Ω’ø’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’∏÷Ç’¥',
            enabled: currentData && currentData.length > 0,
            completed: syntheticData && syntheticData.length > 0
        },
        {
            id: 'fuzzy',
            label: '‘±’∂’∏÷Ä’∏’∑ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂',
            icon: 'üîÆ',
            description: '’é’Ω’ø’°’∞’∏÷Ç’©’µ’°’∂ ’¥’°’Ø’°÷Ä’§’°’Ø’´ ’£’∂’°’∞’°’ø’∏÷Ç’¥',
            enabled: currentData && currentData.length > 0,
            completed: fuzzyResults !== null
        },
        {
            id: 'clustering',
            label: '‘ø’¨’°’Ω’ø’•÷Ä’°÷Å’∏÷Ç’¥',
            icon: 'üéØ',
            description: '’è’æ’µ’°’¨’∂’•÷Ä’´ ’≠’¥’¢’°’æ’∏÷Ä’∏÷Ç’¥',
            enabled: currentData && currentData.length > 0,
            completed: clusterData && clusterData.length > 0
        },
        {
            id: 'scenarios',
            label: '’ç÷Å’•’∂’°÷Ä’∂’•÷Ä',
            icon: 'üìã',
            description: '’à÷Ä’∏’∑’∏÷Ç’¥’°’µ’´’∂ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’´’°',
            enabled: fuzzyResults !== null && clusterData && clusterData.length > 0,
            completed: scenarios && scenarios.length > 0
        },
        {
            id: 'results',
            label: '‘±÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä',
            icon: 'üìä',
            description: '’é’•÷Ä’ª’∂’°’Ø’°’∂ ’ø’•’≤’•’Ø’°’£’´÷Ä',
            enabled: true,
            completed: currentData && currentData.length > 0
        }
    ];

    /**
     * ’è’°’¢’´ ’Ω’•’≤’¥’•’¨’∏÷Ç ’¥’∑’°’Ø’∏÷Ç’¥
     * @param {string} tabId - ’è’°’¢’´ ’∂’∏÷Ç’µ’∂’°’Ø’°’∂’°÷Å’∏÷Ç÷Å’´’π
     * @param {boolean} enabled - ’è’°’¢’´ ’¥’°’ø’π’•’¨’´’∏÷Ç’©’µ’∏÷Ç’∂
     */
    const handleTabClick = (tabId, enabled) => {
        if (enabled) {
            onTabChange(tabId);
        }
    };

    /**
     * ’è’°’¢’´ CSS ’§’°’Ω’•÷Ä’´ ’±÷á’°’æ’∏÷Ä’∏÷Ç’¥
     * @param {Object} tab - ’è’°’¢’´ ÷Ö’¢’µ’•’Ø’ø
     * @returns {string} CSS ’§’°’Ω’•÷Ä
     */
    const getTabClasses = (tab) => {
        let classes = `
      relative px-4 py-3 rounded-lg font-medium text-sm transition-all duration-300 cursor-pointer
      border-2 flex items-center space-x-2 min-w-0 flex-shrink-0
    `;

        if (!tab.enabled) {
            // ‘±’∂’ª’°’ø’æ’°’Æ ’ø’°’¢
            classes += ` 
        bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed
        opacity-50
      `;
        } else if (activeTab === tab.id) {
            // ‘±’Ø’ø’´’æ ’ø’°’¢
            classes += `
        bg-gradient-to-r from-blue-500 to-purple-600 text-white border-blue-500
        shadow-lg transform scale-105 z-10
      `;
        } else {
            // ’Ñ’°’ø’π’•’¨’´ ’ø’°’¢
            classes += `
        bg-white text-gray-700 border-gray-300 hover:border-blue-400 hover:bg-blue-50
        hover:shadow-md hover:scale-102
      `;
        }

        return classes.trim().replace(/\s+/g, ' ');
    };

    /**
     * ’Ä’°’ª’∏’≤’∏÷Ç’©’µ’°’∂ ’´’∂’§’´’Ø’°’ø’∏÷Ä’´ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥
     * @param {Object} tab - ’è’°’¢’´ ÷Ö’¢’µ’•’Ø’ø
     * @returns {JSX.Element|null} ’Ä’°’ª’∏’≤’∏÷Ç’©’µ’°’∂ ’´’∂’§’´’Ø’°’ø’∏÷Ä
     */
    const renderSuccessIndicator = (tab) => {
        if (!tab.completed) return null;

        return (
            <div className={`
        absolute -top-1 -right-1 w-5 h-5 rounded-full flex items-center justify-center text-xs
        ${activeTab === tab.id ? 'bg-white text-green-600' : 'bg-green-500 text-white'}
        shadow-sm
      `}>
                ‚úì
            </div>
        );
    };

    /**
     * ’Ñ’°’ø’π’•’¨’´’∏÷Ç’©’µ’°’∂ ’´’∂’§’´’Ø’°’ø’∏÷Ä’´ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥
     * @param {Object} tab - ’è’°’¢’´ ÷Ö’¢’µ’•’Ø’ø
     * @returns {JSX.Element|null} ’Ñ’°’ø’π’•’¨’´’∏÷Ç’©’µ’°’∂ ’´’∂’§’´’Ø’°’ø’∏÷Ä
     */
    const renderAccessibilityIndicator = (tab) => {
        if (tab.enabled) return null;

        return (
            <div className="absolute -top-1 -right-1 w-5 h-5 bg-gray-400 rounded-full flex items-center justify-center text-xs text-white shadow-sm">
                üîí
            </div>
        );
    };

    return (
        <div className="border-b-2 border-gray-200 pb-4">
            {/* ’è’°’¢’•÷Ä’´ ’Ø’∏’∂’ø’•’µ’∂’•÷Ä */}
            <div className="flex flex-wrap gap-2 lg:gap-3">
                {tabs.map((tab) => (
                    <div
                        key={tab.id}
                        className={getTabClasses(tab)}
                        onClick={() => handleTabClick(tab.id, tab.enabled)}
                        title={tab.enabled ? tab.description : '‘±’µ’Ω ’ø’°’¢’® ’§’•’º ’¥’°’ø’π’•’¨’´ ’π’ß'}
                    >
                        {/* ’è’°’¢’´ ’¢’∏’æ’°’∂’§’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂ */}
                        <div className="flex items-center space-x-2 min-w-0">
                            {/* ’Ü’∑’°’∂ */}
                            <span className="text-lg flex-shrink-0">{tab.icon}</span>

                            {/* ’è’•÷Ñ’Ω’ø */}
                            <span className="font-medium truncate">
                                {tab.label}
                            </span>
                        </div>

                        {/* ‘ø’°÷Ä’£’°’æ’´’≥’°’Ø’´ ’´’∂’§’´’Ø’°’ø’∏÷Ä’∂’•÷Ä */}
                        {renderSuccessIndicator(tab)}
                        {renderAccessibilityIndicator(tab)}
                    </div>
                ))}
            </div>

            {/* ‘±’Ø’ø’´’æ ’ø’°’¢’´ ’¥’°’∂÷Ä’°’¥’°’Ω’∂ ’ø’•’≤’•’Ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä */}
            <div className="mt-4 p-3 bg-gray-50 rounded-lg">
                <div className="flex items-center justify-between">
                    <div>
                        <h4 className="font-bold text-gray-800">
                            {tabs.find(t => t.id === activeTab)?.icon} {tabs.find(t => t.id === activeTab)?.label}
                        </h4>
                        <p className="text-sm text-gray-600 mt-1">
                            {tabs.find(t => t.id === activeTab)?.description}
                        </p>
                    </div>

                    {/* ’è’°’¢’´ ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ */}
                    <div className="text-right">
                        <TabStatistics activeTab={activeTab} />
                    </div>
                </div>

                {/* ‘∏’∂’©’°÷Å’´’Ø ’ø’°’¢’´ ’∞’∏÷Ç’∑’∏÷Ç’¥’∂’•÷Ä */}
                <TabHints activeTab={activeTab} />
            </div>
        </div>
    );
};

/**
 * ’è’°’¢’´ ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’¢’°’≤’°’§÷Ä’´’π
 * @param {Object} props - ’ä÷Ä’∏’∫’Ω’•÷Ä
 * @param {string} props.activeTab - ‘±’Ø’ø’´’æ ’ø’°’¢
 */
const TabStatistics = ({ activeTab }) => {
    const {
        currentData,
        syntheticData,
        fuzzyResults,
        clusterData,
        scenarios
    } = useData();

    const getStatistics = () => {
        switch (activeTab) {
            case 'analysis':
                return {
                    label: '’è’∏’≤’•÷Ä',
                    value: currentData?.length || 0,
                    suffix: ''
                };
            case 'synthetic':
                return {
                    label: '‘≥’•’∂’•÷Ä’°÷Å’æ’°’Æ',
                    value: syntheticData?.length || 0,
                    suffix: ''
                };
            case 'fuzzy':
                return {
                    label: '‘≤’°÷Ä’±÷Ä ’æ’Ω’ø’°’∞’∏÷Ç’©’µ’∏÷Ç’∂',
                    value: fuzzyResults?.high || 0,
                    suffix: '%'
                };
            case 'clustering':
                return {
                    label: '‘Ω’¥’¢’•÷Ä',
                    value: clusterData?.length || 0,
                    suffix: ''
                };
            case 'scenarios':
                return {
                    label: '’ç÷Å’•’∂’°÷Ä’∂’•÷Ä',
                    value: scenarios?.length || 0,
                    suffix: ''
                };
            case 'results':
                return {
                    label: '‘±’¥’¢’∏’≤’ª’°’Ø’°’∂',
                    value: currentData ? 100 : 0,
                    suffix: '%'
                };
            default:
                return {
                    label: '',
                    value: 0,
                    suffix: ''
                };
        }
    };

    const stats = getStatistics();

    return (
        <div className="text-sm">
            <div className="font-bold text-lg text-blue-600">
                {stats.value}{stats.suffix}
            </div>
            <div className="text-gray-500">
                {stats.label}
            </div>
        </div>
    );
};

/**
 * ’è’°’¢’´ ’∞’∏÷Ç’∑’∏÷Ç’¥’∂’•÷Ä’´ ’¢’°’≤’°’§÷Ä’´’π
 * @param {Object} props - ’ä÷Ä’∏’∫’Ω’•÷Ä
 * @param {string} props.activeTab - ‘±’Ø’ø’´’æ ’ø’°’¢
 */
const TabHints = ({ activeTab }) => {
    const hints = {
        'analysis': [
            '’ç’ø’∏÷Ç’£’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’∏÷Ä’°’Ø’´ ’π’°÷É’°’∂’´’∑’∂’•÷Ä’®',
            '‘≥’ø’•÷Ñ ’¢’°÷Å’°’Ø’°’µ’∏’≤ ÷á ’∏’π ’Ω’ø’°’∂’§’°÷Ä’ø ’°÷Ä’™’•÷Ñ’∂’•÷Ä’®'
        ],
        'synthetic': [
            '‘≥’•’∂’•÷Ä’°÷Å÷Ä’•÷Ñ ’¨÷Ä’°÷Å’∏÷Ç÷Å’´’π ’ø’æ’µ’°’¨’∂’•÷Ä ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’∞’°’¥’°÷Ä',
            '‘¥’´’ø’•÷Ñ ’Ω’ø’•’≤’Æ’æ’°’Æ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’∂’¥’∏÷Ç’∑’®'
        ],
        'fuzzy': [
            '‘≥’∂’°’∞’°’ø’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’æ’Ω’ø’°’∞’∏÷Ç’©’µ’°’∂ ’¥’°’Ø’°÷Ä’§’°’Ø’®',
            '’é’•÷Ä’¨’∏÷Ç’Æ’•÷Ñ ’°’∂’∏÷Ä’∏’∑’∏÷Ç’©’µ’°’∂ ’£’∏÷Ä’Æ’∏’∂’∂’•÷Ä’®'
        ],
        'clustering': [
            '‘≤’°÷Å’°’∞’°’µ’ø’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’©’°÷Ñ’∂’æ’°’Æ ’≠’¥’¢’•÷Ä’®',
            '‘∏’∂’ø÷Ä’•÷Ñ ’∞’°÷Ä’¥’°÷Ä ’Ø’¨’°’Ω’ø’•÷Ä’°÷Å’¥’°’∂ ’¥’•’©’∏’§'
        ],
        'scenarios': [
            '’ç’ø’•’≤’Æ’•÷Ñ ’£’∏÷Ä’Æ’∂’°’Ø’°’∂ ’∏÷Ä’∏’∑’∏÷Ç’¥’°’µ’´’∂ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä',
            '‘¥’´’ø’°÷Ä’Ø’•÷Ñ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’®'
        ],
        'results': [
            '‘±÷Ä’ø’°’∞’°’∂’•÷Ñ ’æ’•÷Ä’ª’∂’°’Ø’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®',
            '’à÷Ç’≤’°÷Ä’Ø’•÷Ñ ’ø’•’≤’•’Ø’°’£’´÷Ä’® ’¥’•’∂’•’ª’•÷Ä’´’∂'
        ]
    };

    const currentHints = hints[activeTab] || [];

    if (currentHints.length === 0) return null;

    return (
        <div className="mt-3 pt-3 border-t border-gray-200">
            <div className="text-xs text-gray-600">
                <div className="font-medium mb-1">üí° ’Ä’∏÷Ç’∑’∏÷Ç’¥’∂’•÷Ä:</div>
                <ul className="space-y-1">
                    {currentHints.map((hint, index) => (
                        <li key={index} className="flex items-start">
                            <span className="text-blue-500 mr-1">‚Ä¢</span>
                            <span>{hint}</span>
                        </li>
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default TabNavigation;