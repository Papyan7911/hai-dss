// src/components/AnalysisWorkspace/TabContents/ScenariosTab.js
// ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’ø’°’¢

import React, { useState } from 'react';
import { useData } from '../../../context/DataContext';
import { ChartCard, ScenarioCard } from '../../UI/Card';
import Button, { ButtonGroup } from '../../UI/Button';
import Alert from '../../UI/Alert';
import { generateScenarios } from '../../../utils/scenarios';

/**
 * ScenariosTab ’¢’°’≤’°’§÷Ä’´’π - ’∏÷Ä’∏’∑’∏÷Ç’¥’°’µ’´’∂ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’´’∂’ø’•÷Ä÷Ü’•’µ’Ω
 * ’ç’ø’•’≤’Æ’∏÷Ç’¥ ’ß ’£’∏÷Ä’Æ’∂’°’Ø’°’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä ’¥’•’∂’•’ª’•÷Ä’∂’•÷Ä’´ ’∞’°’¥’°÷Ä
 */
const ScenariosTab = () => {
    const {
        currentData,
        fuzzyResults,
        clusterData,
        scenarios,
        setScenarios,
        dataType,
        projectName
    } = useData();

    const [isGenerating, setIsGenerating] = useState(false);
    const [selectedScenario, setSelectedScenario] = useState(null);
    const [filterPriority, setFilterPriority] = useState('all');

    /**
     * ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’´’°’µ’´ ’¥’•’Ø’∂’°÷Ä’Ø
     */
    const startScenarioGeneration = async () => {
        if (!fuzzyResults && !clusterData) {
            alert('’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’∞’°’¥’°÷Ä ’°’∂’∞÷Ä’°’™’•’∑’ø ’ß ’∂’°’≠ ’Ø’°’ø’°÷Ä’•’¨ ’°’∂’∏÷Ä’∏’∑ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’°’∂ ÷á ’Ø’¨’°’Ω’ø’•÷Ä’´’¶’°÷Å’´’°’µ’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂');
            return;
        }

        setIsGenerating(true);

        try {
            // ’ç’´’¥’∏÷Ç’¨’µ’°÷Å’´’°’µ’´ ’∞’•’ø’°’±’£’∏÷Ç’¥
            await new Promise(resolve => setTimeout(resolve, 2500));

            const generatedScenarios = generateScenarios(dataType, fuzzyResults, clusterData);
            setScenarios(generatedScenarios);

            console.log('‘≥’•’∂’•÷Ä’°÷Å’æ’°’Æ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä:', generatedScenarios);

        } catch (error) {
            console.error('’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’´’°’µ’´ ’Ω’≠’°’¨:', error);
            alert('’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’™’°’¥’°’∂’°’Ø ’Ω’≠’°’¨ ’°’º’°’ª’°÷Å’°’æ');
        } finally {
            setIsGenerating(false);
        }
    };

    /**
     * ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ÷Ü’´’¨’ø÷Ä’°’æ’∏÷Ä’∏÷Ç’¥ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’°’∂ ’∞’´’¥’°’∂ ’æ÷Ä’°
     */
    const filteredScenarios = scenarios?.filter(scenario => {
        if (filterPriority === 'all') return true;
        return scenario.priority === filterPriority;
    }) || [];

    /**
     * ’ç÷Å’•’∂’°÷Ä’´ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥
     */
    const showScenarioDetails = (scenario) => {
        setSelectedScenario(scenario);
    };

    /**
     * ’ç÷Å’•’∂’°÷Ä’´ ’°÷Ä’ø’°’∞’°’∂’∏÷Ç’¥
     */
    const exportScenario = (scenario) => {
        const content = generateScenarioReport(scenario);
        // ‘ø÷Ö’£’ø’°’£’∏÷Ä’Æ’æ’´ useFileDownload hook
        console.log('‘±÷Ä’ø’°’∞’°’∂’∏÷Ç’¥ ’Ω÷Å’•’∂’°÷Ä’®:', scenario.title);
        alert(`’ç÷Å’•’∂’°÷Ä’® "${scenario.title}" ’°÷Ä’ø’°’∞’°’∂’æ’•’¨ ’ß`);
    };

    if (!currentData || currentData.length === 0) {
        return (
            <Alert type="warning" title="’è’æ’µ’°’¨’∂’•÷Ä ’π’•’∂ ’£’ø’∂’æ’•’¨">
                ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’∞’°’¥’°÷Ä ’°’∂’∞÷Ä’°’™’•’∑’ø ’ß ’∂’°’≠ ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ ’ø’æ’µ’°’¨’∂’•÷Ä’®:
            </Alert>
        );
    }

    return (
        <div className="space-y-6">
            {/* ’é’•÷Ä’∂’°’£’´÷Ä */}
            <div>
                <h3 className="text-2xl font-bold text-white-800 mb-2">
                    üìã ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’∏÷Ç’¥ ’¥’•’∂’•’ª’•÷Ä’´ ’∞’°’¥’°÷Ä
                </h3>
                <p className="text-gray-600">
                    ’à÷Ä’∏’∑’∏÷Ç’¥’∂’•÷Ä’´ ’°’ª’°’Ø÷Å’∏÷Ç’©’µ’°’∂ ’£’∏÷Ä’Æ’∂’°’Ø’°’∂ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’´’∂’ø’•’¨’´’£’•’∂’ø ’Ω’ø’•’≤’Æ’∏÷Ç’¥ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’∞’´’¥’°’∂ ’æ÷Ä’°
                </p>
            </div>

            {/* ’Ü’°’≠’°’£’Æ’´ ’´’∂÷Ü’∏ ÷á ’∂’°’≠’°’∫’°’µ’¥’°’∂’∂’•÷Ä */}
            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <h4 className="font-bold text-green-800 mb-2">üìÅ ’Ü’°’≠’°’£’Æ’´ ’∞’°’¥’°’ø’•÷Ñ’Ω’ø</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 text-sm">
                    <div>
                        <span className="text-green-600">’Ü’°’≠’°’£’´’Æ:</span>
                        <span className="font-bold ml-2">{projectName || '‘±’∂’°’∂’∏÷Ç’∂'}</span>
                    </div>
                    <div>
                        <span className="text-green-600">’à’¨’∏÷Ä’ø:</span>
                        <span className="font-bold ml-2">{getDataTypeLabel(dataType)}</span>
                    </div>
                    <div>
                        <span className="text-green-600">’é’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂:</span>
                        <span className="font-bold ml-2">{fuzzyResults ? '‚úÖ' : '‚ùå'}</span>
                    </div>
                    <div>
                        <span className="text-green-600">‘ø’¨’°’Ω’ø’•÷Ä’∂’•÷Ä:</span>
                        <span className="font-bold ml-2">{clusterData?.length || 0}</span>
                    </div>
                </div>
            </div>

            {/* ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’£’•’∂’•÷Ä’°÷Å’¥’°’∂ ’Ø’∏’≥’°’Ø */}
            {(!scenarios || scenarios.length === 0) && (
                <div className="text-center py-8">
                    <div className="bg-blue-50 rounded-lg p-6 max-w-lg mx-auto">
                        <h4 className="font-bold text-blue-800 mb-3">ü§ñ ‘ª’∂’ø’•’¨’´’£’•’∂’ø ’Ω÷Å’•’∂’°÷Ä’°’µ’´’∂ ’¥’∏’§’•’¨’°’æ’∏÷Ä’∏÷Ç’¥</h4>
                        <p className="text-sm text-blue-700 mb-4">
                            ’Ä’°’¥’°’Ø’°÷Ä’£’® ’Ø’æ’•÷Ä’¨’∏÷Ç’Æ’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’® ÷á ’Ø’Ω’ø’•’≤’Æ’´ ’∂’∫’°’ø’°’Ø’°’µ’´’∂
                            ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä ’±’•÷Ä ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’∞’°’¥’°÷Ä:
                        </p>

                        {/* ’ä’°’ø÷Ä’°’Ω’ø’∏÷Ç’©’µ’°’∂ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥ */}
                        <div className="space-y-2 mb-4">
                            <ReadinessCheck
                                label="’è’æ’µ’°’¨’∂’•÷Ä’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂"
                                ready={currentData && currentData.length > 0}
                            />
                            <ReadinessCheck
                                label="‘±’∂’∏÷Ä’∏’∑ ’ø÷Ä’°’¥’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂"
                                ready={fuzzyResults !== null}
                            />
                            <ReadinessCheck
                                label="‘ø’¨’°’Ω’ø’•÷Ä’°÷Å’∏÷Ç’¥"
                                ready={clusterData && clusterData.length > 0}
                            />
                        </div>

                        <Button
                            onClick={startScenarioGeneration}
                            variant="success"
                            size="lg"
                            className="px-8"
                            disabled={isGenerating || (!fuzzyResults && !clusterData)}
                            loading={isGenerating}
                        >
                            {isGenerating ? 'üîÑ ‘≥’•’∂’•÷Ä’°÷Å’∏÷Ç’¥...' : 'üìã ‘≥’•’∂’•÷Ä’°÷Å’∂’•’¨ ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä'}
                        </Button>
                    </div>
                </div>
            )}

            {/* ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥ */}
            {scenarios && scenarios.length > 0 && (
                <>
                    {/* ’ñ’´’¨’ø÷Ä’°’æ’∏÷Ä’∏÷Ç’¥ ÷á ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ */}
                    <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                        <div className="flex items-center space-x-4">
                            <span className="font-medium text-gray-700">’ñ’´’¨’ø÷Ä:</span>
                            <select
                                value={filterPriority}
                                onChange={(e) => setFilterPriority(e.target.value)}
                                className="px-3 py-1 border border-gray-300 rounded-lg text-sm"
                            >
                                <option value="all">‘≤’∏’¨’∏÷Ä ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’® ({scenarios.length})</option>
                                <option value="high">‘≤’°÷Ä’±÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂ ({scenarios.filter(s => s.priority === 'high').length})</option>
                                <option value="medium">’Ñ’´’ª’´’∂ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂ ({scenarios.filter(s => s.priority === 'medium').length})</option>
                                <option value="low">’ë’°’Æ÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂ ({scenarios.filter(s => s.priority === 'low').length})</option>
                            </select>
                        </div>

                        <ButtonGroup>
                            <Button
                                onClick={() => exportAllScenarios()}
                                variant="secondary"
                                size="sm"
                            >
                                üìÑ ‘±÷Ä’ø’°’∞’°’∂’•’¨ ’¢’∏’¨’∏÷Ä’®
                            </Button>
                            <Button
                                onClick={startScenarioGeneration}
                                variant="success"
                                size="sm"
                            >
                                üîÑ ’é’•÷Ä’°’£’•’∂’•÷Ä’°÷Å’∏÷Ç’¥
                            </Button>
                        </ButtonGroup>
                    </div>

                    {/* ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’Ø */}
                    <div className="space-y-4">
                        {filteredScenarios.map((scenario, index) => (
                            <div key={index} className="group">
                                <ScenarioCard
                                    title={scenario.title}
                                    description={scenario.description}
                                    priority={scenario.priority}
                                    priorityText={scenario.priorityText}
                                    actions={scenario.actions}
                                    className="transition-all duration-300 hover:shadow-lg cursor-pointer"
                                    onClick={() => showScenarioDetails(scenario)}
                                />

                                {/* ’ç÷Å’•’∂’°÷Ä’´ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä */}
                                <div className="mt-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                    <ButtonGroup>
                                        <Button
                                            onClick={() => exportScenario(scenario)}
                                            variant="secondary"
                                            size="sm"
                                        >
                                            üìä ’Ñ’°’∂÷Ä’°’¥’°’Ω’∂ ’ø’•’≤’•’Ø’°’£’´÷Ä
                                        </Button>
                                        <Button
                                            onClick={() => implementScenario(scenario)}
                                            variant="primary"
                                            size="sm"
                                        >
                                            üöÄ ‘ø’´÷Ä’°’º’¥’°’∂ ’∫’¨’°’∂
                                        </Button>
                                    </ButtonGroup>
                                </div>
                            </div>
                        ))}
                    </div>

                    {/* ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’°’¥÷É’∏÷É ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ */}
                    <ChartCard title="’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂">
                        <ScenarioStatistics scenarios={scenarios} />
                    </ChartCard>
                </>
            )}

            {/* ’ç÷Å’•’∂’°÷Ä’´ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä (’¥’∏’§’°’¨) */}
            {selectedScenario && (
                <ScenarioDetailsModal
                    scenario={selectedScenario}
                    onClose={() => setSelectedScenario(null)}
                    onExport={() => exportScenario(selectedScenario)}
                />
            )}

            {/* ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’°’æ’°÷Ä’ø’´ ’Æ’°’∂’∏÷Ç÷Å’∏÷Ç’¥ */}
            {scenarios && scenarios.length > 0 && (
                <Alert type="success" title="üìã ’ç÷Å’•’∂’°÷Ä’°’µ’´’∂ ’¥’∏’§’•’¨’°’æ’∏÷Ä’∏÷Ç’¥’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’°’æ’°÷Ä’ø’æ’•’¨ ’ß">
                    <div className="space-y-2 text-sm">
                        <p>
                            ‘≥’•’∂’•÷Ä’°÷Å’æ’•’¨ ’ß <strong>{scenarios.length} ’Ω÷Å’•’∂’°÷Ä</strong>, ’∏÷Ä’∏’∂÷Å’´÷Å
                            <strong> {scenarios.filter(s => s.priority === 'high').length}</strong> ’¢’°÷Ä’±÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’∂’•’∂:
                        </p>
                        <div>
                            <strong>‘≥’¨’≠’°’æ’∏÷Ä ’∏÷Ç’≤’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä:</strong>
                            <ul className="list-disc list-inside mt-1 space-y-1">
                                {getMainDirections(scenarios).map((direction, index) => (
                                    <li key={index}>{direction}</li>
                                ))}
                            </ul>
                        </div>
                    </div>
                </Alert>
            )}
        </div>
    );

    /**
     * ’è’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’´ ’∫’´’ø’°’Ø
     */
    function getDataTypeLabel(value) {
        const labels = {
            'demographic': '‘¥’•’¥’∏’£÷Ä’°÷Ü’´’°’Ø’°’∂',
            'healthcare': '‘±’º’∏’≤’ª’°’∫’°’∞’°’Ø’°’∂',
            'quality_of_life': '‘ø’µ’°’∂÷Ñ’´ ’∏÷Ä’°’Ø',
            'educational': '‘ø÷Ä’©’°’Ø’°’∂'
        };
        return labels[value] || '’â’Ω’°’∞’¥’°’∂’æ’°’Æ';
    }

    /**
     * ‘≤’∏’¨’∏÷Ä ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’°’∂’∏÷Ç’¥
     */
    function exportAllScenarios() {
        console.log('‘±÷Ä’ø’°’∞’°’∂’∏÷Ç’¥ ’¢’∏’¨’∏÷Ä ’Ω÷Å’•’∂’°÷Ä’∂’•÷Ä’®...', scenarios);
        alert(`${scenarios.length} ’Ω÷Å’•’∂’°÷Ä ’°÷Ä’ø’°’∞’°’∂’æ’•’¨ ’ß`);
    }

    /**
     * ’ç÷Å’•’∂’°÷Ä’´ ’´÷Ä’°’Ø’°’∂’°÷Å’¥’°’∂ ’∫’¨’°’∂
     */
    function implementScenario(scenario) {
        console.log('’ç÷Å’•’∂’°÷Ä’´ ’´÷Ä’°’Ø’°’∂’°÷Å’¥’°’∂ ’∫’¨’°’∂:', scenario.title);
        alert(`‘ø’´÷Ä’°’º’¥’°’∂ ’∫’¨’°’∂’® ’∫’°’ø÷Ä’°’Ω’ø ’ß "${scenario.title}" ’Ω÷Å’•’∂’°÷Ä’´ ’∞’°’¥’°÷Ä`);
    }

    /**
     * ’ç÷Å’•’∂’°÷Ä’´ ’ø’•’≤’•’Ø’°’£’´÷Ä
     */
    function generateScenarioReport(scenario) {
        return `
’ç÷Å’•’∂’°÷Ä’´ ’°’∂’æ’°’∂’∏÷Ç’¥: ${scenario.title}
‘±’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂: ${scenario.priorityText}
’Ü’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂: ${scenario.description}

‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä:
${scenario.actions.map((action, index) => `${index + 1}. ${action}`).join('\n')}

‘≥’•’∂’•÷Ä’°÷Å’¥’°’∂ ’°’¥’Ω’°’©’´’æ: ${new Date().toLocaleDateString('hy-AM')}
’Ü’°’≠’°’£’´’Æ: ${projectName}
    `.trim();
    }

    /**
     * ‘≥’¨’≠’°’æ’∏÷Ä ’∏÷Ç’≤’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’Ω’ø’°÷Å’∏÷Ç’¥
     */
    function getMainDirections(scenarios) {
        const directions = scenarios.slice(0, 3).map(s => s.title);
        return directions;
    }
};

/**
 * ’ä’°’ø÷Ä’°’Ω’ø’∏÷Ç’©’µ’°’∂ ’Ω’ø’∏÷Ç’£’¥’°’∂ ’¢’°’≤’°’§÷Ä’´’π
 */
const ReadinessCheck = ({ label, ready }) => {
    return (
        <div className="flex items-center justify-between text-sm">
            <span className="text-blue-700">{label}:</span>
            <span className={`font-bold ${ready ? 'text-green-600' : 'text-red-600'}`}>
                {ready ? '‚úÖ ’ä’°’ø÷Ä’°’Ω’ø' : '‚ùå ‘≤’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’ß'}
            </span>
        </div>
    );
};

/**
 * ’ç÷Å’•’∂’°÷Ä’∂’•÷Ä’´ ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’¢’°’≤’°’§÷Ä’´’π
 */
const ScenarioStatistics = ({ scenarios }) => {
    const priorityCounts = scenarios.reduce((acc, scenario) => {
        acc[scenario.priority] = (acc[scenario.priority] || 0) + 1;
        return acc;
    }, {});

    const totalActions = scenarios.reduce((sum, scenario) => sum + scenario.actions.length, 0);
    const avgActionsPerScenario = (totalActions / scenarios.length).toFixed(1);

    return (
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-4 bg-red-50 rounded-lg">
                <div className="text-2xl font-bold text-red-600">{priorityCounts.high || 0}</div>
                <div className="text-sm text-red-700">‘≤’°÷Ä’±÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂</div>
            </div>

            <div className="text-center p-4 bg-yellow-50 rounded-lg">
                <div className="text-2xl font-bold text-yellow-600">{priorityCounts.medium || 0}</div>
                <div className="text-sm text-yellow-700">’Ñ’´’ª’´’∂ ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂</div>
            </div>

            <div className="text-center p-4 bg-green-50 rounded-lg">
                <div className="text-2xl font-bold text-green-600">{priorityCounts.low || 0}</div>
                <div className="text-sm text-green-700">’ë’°’Æ÷Ä ’°’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂</div>
            </div>

            <div className="text-center p-4 bg-blue-50 rounded-lg">
                <div className="text-2xl font-bold text-blue-600">{avgActionsPerScenario}</div>
                <div className="text-sm text-blue-700">’Ñ’´’ª’´’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä</div>
            </div>
        </div>
    );
};

/**
 * ’ç÷Å’•’∂’°÷Ä’´ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä’´ ’¥’∏’§’°’¨
 */
const ScenarioDetailsModal = ({ scenario, onClose, onExport }) => {
    return (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white rounded-2xl p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto">
                {/* ’é’•÷Ä’∂’°’£’´÷Ä */}
                <div className="flex justify-between items-start mb-4">
                    <h3 className="text-xl font-bold text-white-800">{scenario.title}</h3>
                    <button
                        onClick={onClose}
                        className="text-gray-500 hover:text-gray-700 text-2xl"
                    >
                        √ó
                    </button>
                </div>

                {/* ‘±’º’°’ª’∂’°’∞’•÷Ä’©’∏÷Ç’©’µ’∏÷Ç’∂ */}
                <div className={`inline-block px-3 py-1 rounded-full text-xs font-bold mb-4 ${scenario.priority === 'high' ? 'bg-red-200 text-red-800' :
                        scenario.priority === 'medium' ? 'bg-yellow-200 text-yellow-800' :
                            'bg-green-200 text-green-800'
                    }`}>
                    {scenario.priorityText}
                </div>

                {/* ’Ü’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ */}
                <div className="mb-6">
                    <h4 className="font-bold text-gray-700 mb-2">üìã ’Ü’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂</h4>
                    <p className="text-gray-600 leading-relaxed">{scenario.description}</p>
                </div>

                {/* ‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä */}
                <div className="mb-6">
                    <h4 className="font-bold text-gray-700 mb-2">üéØ ‘±’º’°’ª’°÷Ä’Ø’æ’∏’≤ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä</h4>
                    <ol className="list-decimal list-inside space-y-2">
                        {scenario.actions.map((action, index) => (
                            <li key={index} className="text-gray-600">{action}</li>
                        ))}
                    </ol>
                </div>

                {/* ’Ñ’•’ø’°’§’°’ø’°÷Ä’∂’•÷Ä */}
                {scenario.metadata && (
                    <div className="mb-6 bg-gray-50 rounded-lg p-4">
                        <h4 className="font-bold text-gray-700 mb-2">üîç ‘º÷Ä’°÷Å’∏÷Ç÷Å’´’π ’ø’•’≤’•’Ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä</h4>
                        <div className="text-sm text-gray-600 space-y-1">
                            <div>‘≥’•’∂’•÷Ä’°÷Å’¥’°’∂ ’°’¥’Ω’°’©’´’æ: {new Date(scenario.metadata.generatedAt).toLocaleDateString('hy-AM')}</div>
                            <div>’è’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø: {scenario.metadata.dataType}</div>
                            {scenario.metadata.adaptive && <div>‘±’§’°’∫’ø’´’æ ’Ω÷Å’•’∂’°÷Ä: ‘±’µ’∏</div>}
                        </div>
                    </div>
                )}

                {/* ‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’Ø’∏’≥’°’Ø’∂’•÷Ä */}
                <div className="flex gap-3">
                    <Button
                        onClick={onExport}
                        variant="success"
                        size="md"
                        className="flex-1"
                    >
                        üìä ‘±÷Ä’ø’°’∞’°’∂’•’¨ ’ø’•’≤’•’Ø’°’£’´÷Ä
                    </Button>
                    <Button
                        onClick={onClose}
                        variant="secondary"
                        size="md"
                    >
                        ’ì’°’Ø’•’¨
                    </Button>
                </div>
            </div>
        </div>
    );
};

export default ScenariosTab;