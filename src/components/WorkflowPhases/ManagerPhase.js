import React from 'react';
import { useData } from '../../context/DataContext';
import { PhaseCard } from '../UI/Card';
import Button from '../UI/Button';
import { parseCSV } from '../../utils/csvUtils';
const ManagerPhase = () => {
    const {
        projectName,
        setProjectName,
        dataType,
        setDataType,
        dataSource,
        setDataSource,
        rawData,
        setRawData,
        setCurrentData,
        setAnalystActive
    } = useData();
    const submitManagerData = () => {
        if (!projectName.trim()) {
            alert('‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ ’∂’°’≠’°’£’Æ’´ ’°’∂’æ’°’∂’∏÷Ç’¥’®');
            return;
        }
        if (!dataType) {
            alert('‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’®');
            return;
        }
        if (!rawData.trim()) {
            alert('‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ CSV ’ø’æ’µ’°’¨’∂’•÷Ä’®');
            return;
        }
        try {

            const parsedData = parseCSV(rawData);

            if (parsedData.length === 0) {
                alert('CSV ’ø’æ’µ’°’¨’∂’•÷Ä’® ’§’°’ø’°÷Ä’Ø ’•’∂ ’Ø’°’¥ ’Ω’≠’°’¨ ÷Ü’∏÷Ä’¥’°’ø ’∏÷Ç’∂’•’∂');
                return;
            }
            setCurrentData(parsedData);
            setAnalystActive(true);

            console.log('’Ñ’•’∂’•’ª’•÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’∏÷Ç’≤’°÷Ä’Ø’æ’•’¨ ’•’∂:', {
                projectName,
                dataType,
                rowCount: parsedData.length
            });

        } catch (error) {
            console.error('CSV ’¥’∑’°’Ø’¥’°’∂ ’Ω’≠’°’¨:', error);
            alert('CSV ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’¥’∑’°’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø ’Ω’≠’°’¨ ’°’º’°’ª’°÷Å’°’æ: ’ç’ø’∏÷Ç’£’•÷Ñ ÷Ü’∏÷Ä’¥’°’ø’®:');
        }
    };

    const getDataTypeLabel = (value) => {
        const labels = {
            'demographic': '‘¥’•’¥’∏’£÷Ä’°÷Ü’´’°’Ø’°’∂',
            'healthcare': '‘±’º’∏’≤’ª’°’∫’°’∞’°’Ø’°’∂',
            'quality_of_life': '‘ø’µ’°’∂÷Ñ’´ ’∏÷Ä’°’Ø',
            'educational': '‘ø÷Ä’©’°’Ø’°’∂'
        };
        return labels[value] || value;
    };
    const csvExample = `‘±’¥’Ω’°’©’´’æ,‘±÷Ä’™’•÷Ñ,‘Ω’∏÷Ç’¥’¢,’è’°÷Ä’´÷Ñ
2024-01-01,1500,A,25
2024-01-02,1750,B,30
2024-01-03,1200,A,22`;

    return (
        <PhaseCard
            title="’Ñ’•’∂’•’ª’•÷Ä’´ ÷É’∏÷Ç’¨"
            icon="üë®‚Äçüíº"
            phase="manager"
            className="h-fit"
        >
            <div className="space-y-4">
                <div>
                    <label className="block text-sm font-bold text-white-700 mb-2" style={{color: "#fff"}}>
                        ’Ü’°’≠’°’£’Æ’´ ’°’∂’æ’°’∂’∏÷Ç’¥’® <span className="text-red-500">*</span>
                    </label>
                    <input
                        type="text"
                        value={projectName}
                        onChange={(e) => setProjectName(e.target.value)}
                        placeholder="’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’∂’°’≠’°’£’Æ’´ ’°’∂’æ’°’∂’∏÷Ç’¥’®"
                        className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none transition-colors duration-200"
                        maxLength={100}
                    />
                    <div className="text-xs text-white-500 mt-1" style={{color: "#fff"}}>
                        {projectName.length}/100 ’∂’´’∑
                    </div>
                </div>

                <div>
                    <label className="block text-sm font-bold text-white-700 mb-2" style={{color: "#fff"}}>
                        ’è’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’® <span className="text-red-500">*</span>
                    </label>
                    <select
                        value={dataType}
                        onChange={(e) => setDataType(e.target.value)}
                        className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none transition-colors duration-200"
                    >
                        <option value="">‘∏’∂’ø÷Ä’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’®</option>
                        <option value="demographic">üìä ‘¥’•’¥’∏’£÷Ä’°÷Ü’´’°’Ø’°’∂</option>
                        <option value="healthcare">üè• ‘±’º’∏’≤’ª’°’∫’°’∞’°’Ø’°’∂</option>
                        <option value="quality_of_life">üåü ‘ø’µ’°’∂÷Ñ’´ ’∏÷Ä’°’Ø</option>
                        <option value="educational">üéì ‘ø÷Ä’©’°’Ø’°’∂</option>
                    </select>
                    {dataType && (
                        <div className="text-xs text-blue-600 mt-1">
                            ‘∏’∂’ø÷Ä’æ’°’Æ ’ø’•’Ω’°’Ø÷â {getDataTypeLabel(dataType)}
                        </div>
                    )}
                </div>

                <div>
                    <label className="block text-sm font-bold text-white-700 mb-2" style={{color: "#fff"}}>
                        ’è’æ’µ’°’¨’∂’•÷Ä’´ ’°’≤’¢’µ’∏÷Ç÷Ä’®
                    </label>
                    <textarea
                        value={dataSource}
                        onChange={(e) => setDataSource(e.target.value)}
                        rows="3"
                        placeholder="’Ü’Ø’°÷Ä’°’£÷Ä’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’°’≤’¢’µ’∏÷Ç÷Ä’® ÷á ’¢’∂’∏÷Ç’©’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® (’∏’π ’∫’°÷Ä’ø’°’§’´÷Ä)"
                        className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none transition-colors duration-200 resize-none"
                        maxLength={500}
                    />
                    <div className="text-xs text-white-500 mt-1" style={{color: "#fff"}}>
                        {dataSource.length}/500 ’∂’´’∑
                    </div>
                </div>

                <div>
                    <label className="block text-sm font-bold text-white-700 mb-2" style={{color: "#fff"}}>
                        ’â’°÷É’°’∂’´’∑’∂’•÷Ä (CSV ’±÷á’°’π’°÷É’∏’æ) <span className="text-red-500">*</span>
                    </label>

                    <details className="mb-2">
                        <summary className="text-xs text-blue-600 cursor-pointer hover:text-blue-800">
                            üìù ’è’æ’µ’°’¨’∂’•÷Ä’´ ÷Ö÷Ä’´’∂’°’Ø CSV ’±÷á’°’π’°÷É’∏’æ
                        </summary>
                        <div className="mt-2 p-2 bg-gray-100 rounded text-xs font-mono">
                            <pre>{csvExample}</pre>
                        </div>
                    </details>

                    <textarea
                        value={rawData}
                        onChange={(e) => setRawData(e.target.value)}
                        rows="8"
                        placeholder={`’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’ø’æ’µ’°’¨’∂’•÷Ä’® CSV ’±÷á’°’π’°÷É’∏’æ\n\n${csvExample}`}
                        className="w-full p-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none transition-colors duration-200 font-mono text-sm resize-none"
                    />

                    {rawData && (
                        <div className="text-xs text-white-600 mt-1" style={{color: "#fff"}}>
                            ’è’∏’≤’•÷Ä’´ ÷Ñ’°’∂’°’Ø {rawData.split('\n').filter(line => line.trim()).length - 1}
                            (’°’º’°’∂÷Å ’Ω’µ’∏÷Ç’∂’°’Ø’∂’•÷Ä’´ ’æ’•÷Ä’∂’°’£÷Ä’•÷Ä’´)
                        </div>
                    )}
                </div>

                <div className="pt-4 border-t border-gray-200">
                    <Button
                        onClick={submitManagerData}
                        variant="manager"
                        size="md"
                        className="w-full"
                        disabled={!projectName || !dataType || !rawData}
                    >
                        üì§ ’à÷Ç’≤’°÷Ä’Ø’•’¨ ’æ’•÷Ä’¨’∏÷Ç’Æ’°’¢’°’∂’´’∂
                    </Button>

                    <div className="mt-3 text-xs text-white-500" style={{color: "#fff"}}>
                        üí° <strong>’Ä’∏÷Ç’∑’∏÷Ç’¥’∂’•÷Ä</strong>
                        <ul className="list-disc list-inside mt-1 space-y-1">
                            <li>‘±’º’°’ª’´’∂ ’ø’∏’≤’® ’∫’•’ø÷Ñ ’ß ’∫’°÷Ä’∏÷Ç’∂’°’Ø’´ ’Ω’µ’∏÷Ç’∂’°’Ø’∂’•÷Ä’´ ’°’∂’æ’°’∂’∏÷Ç’¥’∂’•÷Ä’® (‘±’¥’Ω’°’©’´’æ, ‘±÷Ä’™’•÷Ñ, ‘Ω’∏÷Ç’¥’¢, ’è’°÷Ä’´÷Ñ)</li>
                            <li>’Ö’∏÷Ç÷Ä’°÷Ñ’°’∂’π’µ’∏÷Ç÷Ä ’ø’∏’≤’´ ’°÷Ä’™’•÷Ñ ’∫’•’ø÷Ñ ’ß ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’´ ’´÷Ä ’Ω’µ’∏÷Ç’∂’°’Ø’´ ’ø’•’Ω’°’Ø’´’∂</li>
                            <li>’è’æ’µ’°’¨’∂’•÷Ä ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨’∏÷Ç÷Å ’∞’∂’°÷Ä’°’æ’∏÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’Ø’° ’∏÷Ä’∏’∑ ’§’°’∑’ø’•÷Ä ’©’∏’≤’∂’•’¨ ’§’°’ø’°÷Ä’Ø</li>
                        </ul>
                    </div>
                </div>
            </div>
        </PhaseCard>
    );
};

export default ManagerPhase;